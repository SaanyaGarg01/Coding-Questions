/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode start=head;
        ListNode end=head;
        while(end!=null && end.next!=null){
             start=start.next;
             end=end.next.next;
        }
        ListNode secondhalf=reverse(start);
        ListNode firsthalf=head;
        while(secondhalf!=null){
            if(firsthalf.val!=secondhalf.val){
                return false;
            }
            secondhalf=secondhalf.next;
            firsthalf=firsthalf.next;
        }
 return true;
    }
   private ListNode reverse(ListNode head){
    ListNode prev=null;
    while(head!=null){
        ListNode nextnode=head.next;
        head.next=prev;
        prev=head;
        head=nextnode;
    }
    return prev;
   }

}
